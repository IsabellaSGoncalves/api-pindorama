name: CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Auto-correct Ruby code with RuboCop
        run: bin/rubocop -A

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: supabase/postgres:17.6.1.000
        env:
          POSTGRES_USER: supabase_admin
          POSTGRES_PASSWORD: supabase_password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U supabase_admin -d postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: bundle install --jobs 4 --retry 3

      - name: Set Rails environment for schema
        run: bin/rails db:environment:set RAILS_ENV=test
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://supabase_admin:supabase_password@localhost:5432/postgres

      - name: Reset and setup test database
        run: |
          bin/rails db:environment:set RAILS_ENV=test

          PGPASSWORD=supabase_password psql -h localhost -U supabase_admin -d template1 -c \
            "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname = 'postgres' AND pid <> pg_backend_pid();"

          bin/rails db:drop db:create db:schema:load
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://supabase_admin:supabase_password@localhost:5432/postgres

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://supabase_admin:supabase_password@localhost:5432/postgres
        run: bin/rails test